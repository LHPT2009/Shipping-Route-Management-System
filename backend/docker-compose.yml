version: '3.8'

name: shipping_route_management_system

services:

  postgres:
    container_name: postgres_container
    image: postgres:alpine
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./docker-utils:/docker-entrypoint-initdb.d
      - ./postgresdb:/var/lib/postgresql/data
    ports:
      - 5432:${POSTGRES_PORT}
    restart: always
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - backend

  auth_service:
    container_name: auth_service_container
    build: .
    command: sh -c "npm run start:dev auth"
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
    ports:
      - ${AUTH_PORT}:${AUTH_PORT}
    healthcheck:
      test: [ "CMD", "curl", "-f", "${AUTH_URL}/health" ]
      interval: 10s
      retries: 3
      timeout: 10s
    networks:
      - backend

  gateway:
    container_name: gateway_container
    build: .
    command: sh -c "npm run start:dev"
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
      auth_service:
        condition: service_healthy
        restart: true
    ports:
      - ${GATEWAY_PORT}:${GATEWAY_PORT}
    networks:
      - backend

volumes:
  postgresdb: {}

networks:
  backend:

